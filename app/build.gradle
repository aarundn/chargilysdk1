plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id 'maven-publish'
    id 'signing'
}

android {
    namespace 'com.example.chargilysdk'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.chargilysdk"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
publishing {
    publications {
        release(MavenPublication){

            groupId = "com.github.aarundn" // Your group ID
            artifactId = "chargily-sdk" // Your library name
            version = "1.0-alpha"
//            afterEvaluate {
//                from components.release
//            }
            // Add more metadata like description, licenses, developers, etc.
            pom {
                name.set("chargilysdk")
                description.set("A brief description of your library.")
                url.set("https://github.com/aarundn/chargilysdk1")
                licenses {
                    license {
                        name.set("The Apache License, Version 1.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                developers {
                    developer {
                        id.set("aarundn")
                        name.set("haroun debchoune")
                        email.set("debchouneharoun@gmail.com")
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "ossrh"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/") // OSSRH
            credentials {
                username = project.findProperty("ossrhUsername") as String?: ""
                password = project.findProperty("ossrhPassword") as String?: ""
            }
        }
    }
}
tasks.register('testClasses') {}
tasks.register("publishAndReleaseToMavenCentral") {
    doLast {
        // Implement your logic here
        // For example, you could call the existing `publishToMavenCentral` task:
    }
}
dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}